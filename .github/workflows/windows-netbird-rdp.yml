name: Windows RDP via NetBird

on:
  workflow_dispatch:
    inputs:
      rdp_user:
        description: "RDP Username"
        required: false
        default: "NbUser"
      rdp_pass:
        description: "RDP Password"
        required: false
        default: "NbPass@123"
      runtime_minutes:
        description: "RDP Alive Minutes (max 355)"
        required: false
        default: "355"

jobs:
  rdp:
    runs-on: windows-2022
    timeout-minutes: 370

    steps:
      - name: Download and install Telegram, WinRAR, VMQuickConfig & install pyautogui
        shell: pwsh
        run: |
          # Download Telegram Desktop installer
          Invoke-WebRequest -Uri "https://telegram.org/dl/desktop/win64" -OutFile "$env:TEMP\Telegram.exe"
          Start-Process -FilePath "$env:TEMP\Telegram.exe" -ArgumentList "/VERYSILENT", "/NORESTART" -Wait
          Remove-Item "$env:TEMP\Telegram.exe"

          # Download WinRAR 7.13 64-bit installer
          Invoke-WebRequest -Uri "https://www.rarlab.com/rar/winrar-x64-713.exe" -OutFile "$env:TEMP\Winrar.exe"
          Start-Process -FilePath "$env:TEMP\Winrar.exe" -ArgumentList "/S" -Wait
          Remove-Item "$env:TEMP\Winrar.exe"

          # Download VMQuickConfig to desktop
          Invoke-WebRequest -Uri "https://github.com/chieunhatnang/VM-QuickConfig/releases/download/1.6.1/VMQuickConfig.exe" -OutFile "C:\Users\Public\Desktop\VMQuickConfig.exe"

          # Install pyautogui Python package quietly
          python -m pip install pyautogui --quiet

      - name: Install NetBird agent
        shell: pwsh
        run: |
          $url = "https://pkgs.netbird.io/windows/x64"
          $dst = "$env:TEMP\netbird-installer.exe"
          Invoke-WebRequest -Uri $url -OutFile $dst -UseBasicParsing
          Start-Process -FilePath $dst -ArgumentList "/S" -Wait

      - name: Connect runner to NetBird using setup key
        shell: pwsh
        run: |
          & "C:\Program Files\NetBird\netbird.exe" up --setup-key "${{ secrets.NETBIRD_SETUP_KEY }}"
          & "C:\Program Files\NetBird\netbird.exe" status

      - name: Create RDP User and Enable RDP
        shell: pwsh
        run: |
          $u = "${{ github.event.inputs.rdp_user }}"
          $p = "${{ github.event.inputs.rdp_pass }}"
          $sec = ConvertTo-SecureString $p -AsPlainText -Force
          if (-not (Get-LocalUser -Name $u -ErrorAction SilentlyContinue)) {
            New-LocalUser -Name $u -Password $sec -AccountNeverExpires
            Add-LocalGroupMember -Group Administrators -Member $u
            Add-LocalGroupMember -Group "Remote Desktop Users" -Member $u
          } else {
            Set-LocalUser -Name $u -Password $sec -AccountNeverExpires
            Enable-LocalUser -Name $u
          }
          Set-ItemProperty "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name fDenyTSConnections -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop" | Out-Null

      - name: Enable Windows Audio Service
        shell: pwsh
        run: |
          Set-Service -Name "Audiosrv" -StartupType Automatic
          Start-Service -Name "Audiosrv"

      - name: Show NetBird IP
        shell: pwsh
        run: |
          & "C:\Program Files\NetBird\netbird.exe" status | Select-String "NetBird IP"

      - name: Keep RDP Session Alive
        shell: pwsh
        run: |
          $runtime = [int]"${{ github.event.inputs.runtime_minutes }}"
          if ($runtime -gt 355) { $runtime = 355 }
          $end = (Get-Date).AddMinutes($runtime)
          while ((Get-Date) -lt $end) {
            $left = [math]::Ceiling(($end - (Get-Date)).TotalMinutes)
            Write-Host "RDP alive... ($left min left)"
            Start-Sleep -Seconds 60
          }
          
