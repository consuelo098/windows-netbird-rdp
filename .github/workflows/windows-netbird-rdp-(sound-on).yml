name: macOS Remote Access via NetBird

on:
  workflow_dispatch:
    inputs:
      rdpuser:
        description: 'Remote user name'
        required: false
        default: 'nbuser'
      rdppass:
        description: 'Remote user password'
        required: false
        default: 'NbPass123'
      runtimeminutes:
        description: 'Session alive time in minutes (max 355)'
        required: false
        default: 355

jobs:
  rdp:
    runs-on: macos-latest
    timeout-minutes: 370
    steps:
    - name: Install NetBird agent
      shell: bash
      run: |
        curl -sL "https://pkgs.netbird.io/macos/amd64" -o netbird.pkg
        sudo installer -pkg netbird.pkg -target /
        rm netbird.pkg

    - name: Connect runner to NetBird using setup key
      shell: bash
      env:
        NETBIRDSETUPKEY: ${{ secrets.NETBIRDSETUPKEY }}
      run: |
        sudo netbird up --setup-key "$NETBIRDSETUPKEY"
        netbird status

    - name: Create user and enable Screen Sharing
      shell: bash
      run: |
        username="${{ github.event.inputs.rdpuser }}"
        password="${{ github.event.inputs.rdppass }}"
        if ! id -u "$username" >/dev/null 2>&1; then
          sudo sysadminctl -addUser "$username" -password "$password"
        else
          sudo dscl . -passwd /Users/"$username" "$password"
        fi

        sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
          -activate -configure -access -on -users "$username" -privs -all -restart -agent -menu

    - name: Keep session alive for specified runtime
      shell: bash
      run: |
        runtime_minutes=${{ github.event.inputs.runtimeminutes }}
        if [ "$runtime_minutes" -gt 355 ]; then
          runtime_minutes=355
        fi

        end_time=$((SECONDS + runtime_minutes * 60))
        while [ $SECONDS -lt $end_time ]; do
          echo "Remote session alive... $(( (end_time - SECONDS) / 60 )) minutes left"
          sleep 60
        done
        
